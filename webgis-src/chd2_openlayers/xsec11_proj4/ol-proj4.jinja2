{% extends "contentj.jinja2" %}
  <title>Projection</title>

    {% block headbody %}

    <link rel="stylesheet" href="https://openlayers.org/en/v4.6.5/css/ol.css" type="text/css">
    <!-- The following js only works with Internet Explorer and Android 4.x versions-->
      <script src="https://cdn.polyfill.io/v2/polyfill.min.js?features=requestAnimationFrame,Element.prototype.classList,URL"></script>
    <!--Import the js file of the latest ol version.-->
	<script src="https://openlayers.org/en/v4.6.5/build/ol.js"></script>
	 <script src="https://cdnjs.cloudflare.com/ajax/libs/proj4js/2.4.4/proj4.js"></script>
  <style>
       #olmap {
            border: 1px solid #ddd;
            width: 99%;
            height: 400px;
        }
    </style>

    {% endblock %}

{%  block cntbody %}


    <div id="olmap" class="olmap"></div>
    <br>
    <div>This example shows a client reprojection of a single image source. Data can be projected directly onto the map for easy access.</div>
    <script>
		//Projected data
      proj4.defs('EPSG:27700', '+proj=tmerc +lat_0=49 +lon_0=-2 +k=0.9996012717 ' +
          '+x_0=400000 +y_0=-100000 +ellps=airy ' +
          '+towgs84=446.448,-125.157,542.06,0.15,0.247,0.842,-20.489 ' +
          '+units=m +no_defs');
      var imageExtent = [0, 0, 700000, 1300000];
	//Load map
      var olmap = new ol.Map({
	//Load layer
        layers: [
                         new ol.layer.Tile({  //Load the tile layer
                    source: new ol.source.Stamen({        //Layer source for Stamen Tile server.
                        layer: 'terrain'
                    })
                }),
          new ol.layer.Image({		//The images rendered by the server can be used at any range and resolution.
            source: new ol.source.ImageStatic({		//Layer source for displaying a single still image.
		//Picture address
              url: 'https://upload.wikimedia.org/wikipedia/commons/thumb/1/18/' +
                     'British_National_Grid.svg/2000px-British_National_Grid.svg.png',
              crossOrigin: '',
              projection: 'EPSG:27700',	//Projection
              imageExtent: imageExtent	//The range of an image in map coordinates. These are the [left, bottom, right, top] map coordinates of the image
            })
          })
        ],
        target: 'olmap',		//id of the map container div
        view: new ol.View({		//The map view is 2D
          center: ol.proj.transform(	//Converts coordinates from a source projection to a target projection. This returns a new coordinate (and does not modify the original).
              ol.extent.getCenter(imageExtent), 'EPSG:27700', 'EPSG:3857'),	//Gets the center coordinates of the range.
          zoom: 4		//Map initial level
        })
      });
    </script>

{% endblock %}
<!--This example shows a client-side reprojection of a single image source.-->
 