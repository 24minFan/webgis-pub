{% extends "contentj.jinja2" %}
  <title>Cartodb Map</title>

    {% block headbody %}
    <link rel="stylesheet" href="https://www.osgeo.cn/static/f2elib/ol-7.4.x/ol.css" type="text/css">

    <!--Import the js file of the latest ol version.-->
	<script src="https://www.osgeo.cn/static/f2elib/ol-7.4.x/dist/ol.js"></script>
  <style>
        #olmap {
            border: 1px solid #ddd;
            width: 99%;
            height: 400px;
        }
    </style>

    {% endblock %}

{%  block cntbody %}


   <div class="row-fluid">
      <div class="span12">
        <div id="olmap" class="olmap"></div>
        <div>
        <form class="form-horizontal">
            <div class="col-sm-12">
          <label class="col-sm-2">
            Show countries larger than
               </label>
            <div class="col-sm-10">
            <select id="country-area" class="form-control">
              <option value="0" selected>0 ㎢</option>
              <option value="5000">5000 ㎢</option>
              <option value="10000">10000 ㎢</option>
              <option value="50000">50000 ㎢</option>
              <option value="100000">100000 ㎢</option>
            </select>
         </div>
                </div>
        </form>
      </div>
    </div>
   </div>
    <br>

    <script>
	//Define the mapConfig object
      var mapConfig = {
        'layers': [{
          'type': 'cartodb',
          'options': {
            'cartocss_version': '2.1.1',
            'cartocss': '#layer { polygon-fill: #F00; }',
            'sql': 'select * from european_countries_e where area > 0'
          }
        }]
      };
	// Define the data source for the cartoDBsource object
      var cartoDBSource = new ol.source.CartoDB({
        account: 'documentation',		//CartoDB account name is mandatory	
        config: mapConfig
      });
		//Initially change the Map object to display the map.
      var olmap = new ol.Map({
	   //Load the map in the map container
        layers: [
            {#
          new ol.layer.Tile({	// Load the tile layer data
            source: new ol.source.OSM()	// The layer corresponds to the data source where the OpenStreetMap online tile service data is loaded
          }),
             #}
                            new ol.layer.Tile({  //Load the tile layer
                    source: new ol.source.Stamen({        //Layer source for Stamen Tile server.
                        layer: 'terrain'
                    })
                }),
          new ol.layer.Tile({		// Load the tile layer data
            source: cartoDBSource	// For the data source corresponding to the layer, load cartoDBSource service data here
          })
        ],
        target: 'olmap',		// id of the div layer of the map container
        view: new ol.View({
          center: [38, 116],		//Initial center of the map
          zoom: 2				//The initial map display level is 2

        })
      });

      function setArea(n) {
        mapConfig.layers[0].options.sql =
            'select * from european_countries_e where area > ' + n;
        cartoDBSource.setConfig(mapConfig);
      }


      document.getElementById('country-area').addEventListener('change', function() {
        setArea(this.value);
      });
    </script>

{% endblock %}
<!--A simple Cartodb map example-->