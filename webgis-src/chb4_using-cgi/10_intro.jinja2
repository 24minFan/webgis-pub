{% extends "contentj.jinja2" %}

<title>MapServer query mechanism</title>

<!--
In the second section, we use an HTML template file to create a user interface for the web map application. Let's use an application.
At the end of the program, the user can zoom in, zoom out, and select layers.
-->

{% block cntbody %}


    <h1>MapServer query mechanism</h1>

    <p> In addition to its rendering capabilities, MapServer also provides powerful query capabilities, supporting both spatial queries (based on location selection) and property queries (based on property value selection).
To do this without programming support, MapServer makes extensive use of templates to build queries and render results.
This leads to some complex interactions between MapFile, template, and MapServer programs.
There are also a number of different query methods in use, as well as different ways of using templates.
For these reasons, MapServer's query tools can be the most confusing aspect.</p>

    <p> MapServer has powerful and complex query capabilities, but in CGI mode, it lacks the tools to allow the kind of analysis that a true GIS provides.
This overview describes some of MapServer's query capabilities.</p>


    <h2 id="vka">Spatial retrieval concept</h2>


    <p>Spatial query is a special kind of query supported by geodatabases and spatial databases. Spatial query queries
        differ from non-spatial SQL queries in many important ways. The two most important differences are: the use of
        geometric type data such as points, lines, polygons, and queries involving spatial relationships between geometric types.</p>

    <p>The two-dimensional or three-dimensional spatial data is used as the basis of the query, and the query results are represented graphically; the spatial query statement is composed of one or more spatial operation operators, including predicates expressing spatial relationships.</p>

    <p>Spatial query and analysis are at the core of GIS, and most of the daily tasks in GIS projects are related to queries. GIS query types can be divided into the following three types: simple attribute query, query related to spatial location, and joint query related to spatial location and attribute.</p>


  <h2 id="z1n">Basic requirements for implementing spatial retrieval in MapServer</h2>


    <div>The query template is an HTML fragment that is a suitable HTML interface when placed together by the MapServer CGI program.</div>


    <p> The following two variables are user-defined variables. If the tag defined by <code>[]</code> in square brackets is found, MapServer will pass its value to the HTML template.</p>


    <p>The <code>map</code> and <code>layer</code> variables are interactive MapServer variables that are required by the map application.</p>

    <p>

       The variable passed by <code>map_web</code> will replace the <code>TEMPLATE</code> parameter in the WEB object of the Mapfile.
     This variable is different from a user-defined variable.
    </p>


    {#
<h2 id="v91">Open tutorial</h2>
    <!-- The map_web variable will replace the TEMPLATE
         parameter in the WEB object of the MAP file... -->

    <form method="get" action="/cgi-bin/mapserv" class="form-horizontal">

        <input type="hidden" name="root" value="/owg">
        <input type="hidden" name="program" value="/cgi-bin/mapserv">

        <!-- The map and layer variables are internal MapServer variables.
             They are required by the mapping application. -->
        <input type="hidden" name="map" value="/owg/mfd1.map">
        <input type="hidden" name="layer" value="states">
        <input type="hidden" name="zoom" value="0">
        <div class="form-group">
            <div class="col-sm-12">
                <div class="col-sm-5">
                    <select name="map_web" class="form-control">
                        <option value="template example3-1.html">
                            Tutorial 3.1: Querying Templates
                        </option>
                        <option value="template example3-2.html">
                           Tutorial 3.2: Layer-wide Header and Footer Templates
                        </option>
                        <option value="template example3-3.html">
                            Tutorial 3.3: Map-wide Header and Footer Templates
                        </option>
                        <option value="template example3-4.html header ../templates/example3_header.html footer ../templates/example3_footer_querymap.html">
                            Tutorial 3.4: The Query Map
                        </option>
                    </select> &nbsp;
                </div>
                <div class="col-sm-2">
                    <input type="submit" name="submit" value="Open tutorial" class="btn btn-sm btn-primary">
                </div>
            </div>
        </div>


    </form>

     #}


{% endblock %}